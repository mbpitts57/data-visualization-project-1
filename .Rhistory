knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, dplyr, nycmaps, usmap, cowplot, lubridate, RColorBrewer, gridExtra, tigris, sp, ggmap, maptools, broom, httr, rgdal, maps, wesanderson, ggplot2, kableExtra, DT, htmltools, htmlwidgets, gtools, rvest, tidytext, xml2)
devtools::install_github("zachcp/nycmaps")
# This code chunk imports a dataset that contains mapping data for the boroughs of New York City. I wrangled
# the dataset by renaming all of the regions included in the dataset to just the name of the borough they are located in,
# so joining with future datasets would be simpler.
devtools::install_github("zachcp/nycmaps")
pacman::p_load(devtools, tidyverse, dplyr, nycmaps, maps, usmap, cowplot, lubridate, RColorBrewer, gridExtra, tigris, sp, ggmap, maptools, broom, httr, rgdal, maps, wesanderson, ggplot2, kableExtra, DT, htmltools, htmlwidgets, gtools, rvest, tidytext, xml2)
# This code chunk imports a dataset that contains mapping data for the boroughs of New York City. I wrangled
# the dataset by renaming all of the regions included in the dataset to just the name of the borough they are located in,
# so joining with future datasets would be simpler.
devtools::install_github("zachcp/nycmaps")
pacman::p_load(devtools, tidyverse, dplyr, nycmaps, maps, usmap, cowplot, lubridate, RColorBrewer, gridExtra, tigris, sp, ggmap, maptools, broom, httr, rgdal, maps, wesanderson, ggplot2, kableExtra, DT, htmltools, htmlwidgets, gtools, rvest, tidytext, xml2)
devtools::install_github("zachcp/nycmaps")
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(devtools, tidyverse, dplyr, nycmaps, maps, usmap, cowplot, lubridate, RColorBrewer, gridExtra, tigris, sp, ggmap, maptools, broom, httr, rgdal, maps, wesanderson, ggplot2, kableExtra, DT, htmltools, htmlwidgets, gtools, rvest, tidytext, xml2)
devtools::install_github("zachcp/nycmaps")
# nyc BOROUGHS mapping info
# This code chunk imports a dataset that contains mapping data for the boroughs of New York City. I wrangled
# the dataset by renaming all of the regions included in the dataset to just the name of the borough they are located in,
# so joining with future datasets would be simpler.
# map(database="nyc")
nyc <- map_data("nyc")
nyc <- nyc %>%
mutate(Borough = case_when(grepl("Manhattan", region) ~ "Manhattan",
grepl("Bronx", region) ~"Bronx",
grepl("Brook", region) ~ "Brooklyn",
grepl("Queens", region) ~ "Queens",
grepl("Staten Island", region) ~ "Staten Island"))
nyc$subregion <- NULL
# This is an example of the graph that this dataset produces.
nyc_borough_plot <- nyc %>%
ggplot() +
geom_map(map=nyc,
color = "gray",
mapping = aes(x=long,
y=lat,
map_id=region)) +
coord_equal() +
theme_map()
# This code chunk wrangles historical felony data from 2000 to 2020 in New York City.
# importing raw historical felony data from csv
hist_felony_raw <- read_csv("data/seven-major-felony-offenses-2000-2020.csv")
hist_felony_data <- hist_felony_raw
# wrangling of first dataset. variables names are changed to make data more concise. data is pivoted longer
# to allow data to be sorted by year. The row that provides the total sum of felonies is removed as it is not needed.
hist_felony_data <- hist_felony_data  %>%
rename(Felony = OFFENSE) %>%
mutate(Felony = str_replace(Felony,
"MURDER & NON-NEGL. MANSLAUGHTER",
"MURDER"),
Felony = str_replace(Felony,
"FELONY ASSAULT",
"ASSAULT"),
Felony = str_replace(Felony,
"GRAND LARCENY OF MOTOR VEHICLE",
"GRAND LARCENY OF VEHICLE")) %>%
pivot_longer(cols = `2000`:`2020`,
names_to = "Year",
values_to = "Number") %>%
filter(Felony != "TOTAL SEVEN MAJOR FELONY OFFENSES")
# This is an html widget that allows the viewing and searching of this datatable, as it is one of the most important
# datasets in this project.
datatable(hist_felony_data, options = list(pageLength = 5))
# This code chunk wrangles historical population data for New York City.
# importing raw historical population data from csv
hist_borough_pop_raw <- read_csv("data/new-york-city-population-by-borough-1950-2040.csv")
hist_borough_pop <- hist_borough_pop_raw
# wrangling of second dataset. the populations for the years 2000, 2010, and 2020 were selected. The total
# New York City population was selected for each year. The dataset was pivoted longer to make the data
# more usuable. The individual borough populations were removed.
hist_borough_pop_tot <- hist_borough_pop %>%
select(`Borough`,`2000`,`2010`,`2020`) %>%
filter(Borough == "NYC Total") %>%
pivot_longer(cols = `2000`:`2020`,
names_to = "Year",
values_to = "NycPop")
hist_borough_pop_tot$Borough = NULL
# the same raw population dataset is wrangled to display the populations for each borough.
hist_borough_pop <- hist_borough_pop %>%
select(`Borough`,`2000`,`2010`,`2020`) %>%
filter(Borough != "NYC Total")
hist_borough_pop_longer <- hist_borough_pop %>%
pivot_longer(cols = `2000`:`2020`,
names_to = "Year",
values_to = "Pop")
# data for the year 2000 is selected from the dataset
nyc_pop_2000 <- hist_borough_pop %>%
select(`Borough`,`2000`) %>%
rename(Pop = `2000`)
# data for the year 2010 is selected from the dataset
nyc_pop_2010 <- hist_borough_pop %>%
select(`Borough`,`2010`) %>%
rename(Pop = `2010`)
# data for the year 2020 is selected from the dataset
nyc_pop_2020 <- hist_borough_pop %>%
select(`Borough`,`2020`) %>%
rename(Pop = `2020`)
# This code chunk generates a line graph that displays the evolution of the numbers of felonies committed from 2000 to 2020
# in New York City. This is total felonies, not per capita.
# Line graph showing all felonies in nyc from 2000-2020
colors = c(wes_palette("GrandBudapest1"), wes_palette("GrandBudapest2"))
hist_felony_plot_2 <- hist_felony_data %>%
ggplot(aes(x = Year, y = Number, group = Felony, color = Felony)) +
geom_line(size = 1) +
labs(x = NULL, y = "Number of Cases", title = "Number of Felonies Committed", subtitle = "Over The Past Twenty Years in NYC") +
scale_color_manual(values = colors) +
theme(legend.position = "top",
axis.text.x = element_text(angle = 90),
legend.title = element_blank())
hist_felony_plot_2
